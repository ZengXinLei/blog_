06-19 10:11:49.166 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 6204 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
06-19 10:11:49.179 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
06-19 10:11:49.985 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
06-19 10:11:50.089 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$4fbdd74a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-19 10:11:50.126 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-19 10:11:50.378 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
06-19 10:11:50.384 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
06-19 10:11:50.384 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
06-19 10:11:50.384 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
06-19 10:11:50.447 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
06-19 10:11:50.447 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1214 ms
06-19 10:11:50.874 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
06-19 10:11:50.944 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
06-19 10:11:51.120 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
06-19 10:11:51.137 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
06-19 10:11:51.138 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
06-19 10:11:51.148 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
06-19 10:11:51.168 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
06-19 10:11:51.414 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.661 seconds (JVM running for 3.777)
06-19 10:12:03.105 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
06-19 10:12:03.106 [ INFO] [               o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
06-19 10:12:03.117 [ INFO] [               o.s.w.s.DispatcherServlet:547] - Completed initialization in 10 ms
06-19 10:12:03.138 [ INFO] [                                        : 29] - getAllType
06-19 10:12:03.156 [ INFO] [                  c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
06-19 10:12:03.265 [ INFO] [                  c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
06-19 10:12:25.107 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 7780 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
06-19 10:12:25.123 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
06-19 10:12:25.922 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
06-19 10:12:26.026 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$ec997f88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-19 10:12:26.063 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-19 10:12:26.347 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
06-19 10:12:26.353 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
06-19 10:12:26.353 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
06-19 10:12:26.354 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
06-19 10:12:26.428 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
06-19 10:12:26.428 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1252 ms
06-19 10:12:26.890 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
06-19 10:12:26.985 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
06-19 10:12:27.186 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
06-19 10:12:27.205 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
06-19 10:12:27.206 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
06-19 10:12:27.219 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
06-19 10:12:27.241 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
06-19 10:12:27.501 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.816 seconds (JVM running for 3.882)
06-19 10:12:29.179 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
06-19 10:12:29.180 [ INFO] [               o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
06-19 10:12:29.186 [ INFO] [               o.s.w.s.DispatcherServlet:547] - Completed initialization in 6 ms
06-19 10:12:29.200 [ INFO] [                                        : 29] - getAllType
06-19 10:12:29.214 [ INFO] [                  c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
06-19 10:12:29.294 [ INFO] [                  c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
06-19 10:13:15.029 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 12472 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
06-19 10:13:15.043 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
06-19 10:13:15.845 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
06-19 10:13:15.953 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$e23bb78a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-19 10:13:15.988 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-19 10:13:16.233 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
06-19 10:13:16.239 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
06-19 10:13:16.240 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
06-19 10:13:16.240 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
06-19 10:13:16.303 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
06-19 10:13:16.303 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1202 ms
06-19 10:13:16.731 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
06-19 10:13:16.798 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
06-19 10:13:16.980 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
06-19 10:13:16.996 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
06-19 10:13:16.997 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
06-19 10:13:17.008 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
06-19 10:13:17.028 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
06-19 10:13:17.271 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.671 seconds (JVM running for 3.77)
06-19 10:13:20.266 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
06-19 10:13:20.267 [ INFO] [               o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
06-19 10:13:20.274 [ INFO] [               o.s.w.s.DispatcherServlet:547] - Completed initialization in 7 ms
06-19 10:13:20.288 [ INFO] [                                        : 29] - getAllType
06-19 10:13:20.303 [ INFO] [                  c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
06-19 10:13:20.385 [ INFO] [                  c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
06-19 10:19:17.785 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 16080 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
06-19 10:19:17.797 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
06-19 10:19:18.561 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
06-19 10:19:18.668 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$119ac7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-19 10:19:18.703 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-19 10:19:18.949 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
06-19 10:19:18.955 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
06-19 10:19:18.955 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
06-19 10:19:18.956 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
06-19 10:19:19.021 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
06-19 10:19:19.022 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1171 ms
06-19 10:19:19.461 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
06-19 10:19:19.535 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
06-19 10:19:19.713 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
06-19 10:19:19.730 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
06-19 10:19:19.731 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
06-19 10:19:19.742 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
06-19 10:19:19.762 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
06-19 10:19:20.005 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.598 seconds (JVM running for 3.696)
06-19 10:19:23.717 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
06-19 10:19:23.718 [ INFO] [               o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
06-19 10:19:23.725 [ INFO] [               o.s.w.s.DispatcherServlet:547] - Completed initialization in 7 ms
06-19 10:19:23.740 [ INFO] [                      c.e.a.A.getAllType: 30] - getAllType
06-19 10:19:23.754 [ INFO] [                  c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
06-19 10:19:23.838 [ INFO] [                  c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
06-19 10:20:04.432 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 9008 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
06-19 10:20:04.444 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
06-19 10:20:05.245 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
06-19 10:20:05.375 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$78ce17da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-19 10:20:05.411 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-19 10:20:05.701 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
06-19 10:20:05.707 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
06-19 10:20:05.707 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
06-19 10:20:05.708 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
06-19 10:20:05.776 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
06-19 10:20:05.776 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1271 ms
06-19 10:20:06.237 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
06-19 10:20:06.306 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
06-19 10:20:06.491 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
06-19 10:20:06.508 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
06-19 10:20:06.509 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
06-19 10:20:06.520 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
06-19 10:20:06.540 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
06-19 10:20:06.795 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.748 seconds (JVM running for 3.847)
06-19 10:20:09.141 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
06-19 10:20:09.142 [ INFO] [               o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
06-19 10:20:09.149 [ INFO] [               o.s.w.s.DispatcherServlet:547] - Completed initialization in 7 ms
06-19 10:20:09.163 [ INFO] [                        c.e.a.ArticleApi: 30] - getAllType
06-19 10:20:09.178 [ INFO] [                  c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
06-19 10:20:09.265 [ INFO] [                  c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
06-19 10:20:58.534 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 2108 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
06-19 10:20:58.546 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
06-19 10:20:59.447 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
06-19 10:20:59.556 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$ec6371ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-19 10:20:59.593 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-19 10:20:59.839 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
06-19 10:20:59.845 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
06-19 10:20:59.846 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
06-19 10:20:59.846 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
06-19 10:20:59.908 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
06-19 10:20:59.909 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1314 ms
06-19 10:21:00.348 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
06-19 10:21:00.415 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
06-19 10:21:00.608 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
06-19 10:21:00.630 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
06-19 10:21:00.631 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
06-19 10:21:00.644 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
06-19 10:21:00.669 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
06-19 10:21:00.934 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.781 seconds (JVM running for 3.815)
06-19 10:21:03.637 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
06-19 10:21:03.638 [ INFO] [               o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
06-19 10:21:03.649 [ INFO] [               o.s.w.s.DispatcherServlet:547] - Completed initialization in 10 ms
06-19 10:21:03.667 [ INFO] [                              ArticleApi: 30] - getAllType
06-19 10:21:03.684 [ INFO] [                  c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
06-19 10:21:03.791 [ INFO] [                  c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
06-19 10:21:31.643 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 3960 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
06-19 10:21:31.657 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
06-19 10:21:32.471 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
06-19 10:21:32.575 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$e23bb78a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
06-19 10:21:32.611 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
06-19 10:21:32.857 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
06-19 10:21:32.862 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
06-19 10:21:32.863 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
06-19 10:21:32.863 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
06-19 10:21:32.926 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
06-19 10:21:32.926 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1208 ms
06-19 10:21:33.356 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
06-19 10:21:33.430 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
06-19 10:21:33.611 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
06-19 10:21:33.627 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
06-19 10:21:33.628 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
06-19 10:21:33.640 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
06-19 10:21:33.661 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
06-19 10:21:33.910 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.699 seconds (JVM running for 3.804)
06-19 10:21:35.999 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
06-19 10:21:36.000 [ INFO] [               o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
06-19 10:21:36.010 [ INFO] [               o.s.w.s.DispatcherServlet:547] - Completed initialization in 10 ms
06-19 10:21:36.028 [ INFO] [                        c.e.a.ArticleApi: 30] - getAllType
06-19 10:21:36.044 [ INFO] [                  c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
06-19 10:21:36.149 [ INFO] [                  c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
ú0-06-19 10:24:00.834 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 19664 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
ú0-06-19 10:24:00.845 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
ú0-06-19 10:24:01.661 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
ú0-06-19 10:24:01.764 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2c724ed3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
ú0-06-19 10:24:01.799 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
ú0-06-19 10:24:02.049 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
ú0-06-19 10:24:02.055 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
ú0-06-19 10:24:02.056 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
ú0-06-19 10:24:02.057 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
ú0-06-19 10:24:02.126 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
ú0-06-19 10:24:02.127 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1213 ms
ú0-06-19 10:24:02.647 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
ú0-06-19 10:24:02.731 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
ú0-06-19 10:24:02.962 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
ú0-06-19 10:24:02.987 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
ú0-06-19 10:24:02.988 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
ú0-06-19 10:24:03.004 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
ú0-06-19 10:24:03.035 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
ú0-06-19 10:24:03.348 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.932 seconds (JVM running for 4.002)
2020-06-19 10:24:47.002 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 16264 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:24:47.014 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:24:47.793 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:24:47.897 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$910904a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:24:47.932 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:24:48.173 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:24:48.179 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:24:48.180 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:24:48.180 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:24:48.243 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:24:48.243 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1168 ms
2020-06-19 10:24:48.662 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:24:48.731 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:24:48.925 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:24:48.943 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:24:48.944 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:24:48.955 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:24:48.977 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:24:49.230 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.616 seconds (JVM running for 3.63)
2020-06-19 10:25:26.853 [ INFO] [                   c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 9020 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:25:26.866 [ INFO] [                   c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:25:27.642 [ WARN] [          o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:25:27.744 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2c2f66c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:25:27.780 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:25:28.027 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:25:28.033 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:25:28.033 [ INFO] [                 o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:25:28.034 [ INFO] [                  o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:25:28.098 [ INFO] [                       o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:25:28.098 [ INFO] [                   o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1174 ms
2020-06-19 10:25:28.531 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:25:28.599 [ INFO] [          o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:25:28.788 [ INFO] [               o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:25:28.804 [ INFO] [             o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:25:28.805 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:25:28.816 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:25:28.836 [ INFO] [    s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:25:29.078 [ INFO] [                   c.e.b.BlogApplication: 61] - Started BlogApplication in 2.604 seconds (JVM running for 3.7)
2020-06-19 10:25:59.823 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 4620 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:25:59.834 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:26:00.597 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:26:00.701 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$dfb2d30] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:26:00.736 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:26:00.978 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:26:00.985 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:26:00.985 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:26:00.986 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:26:01.057 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:26:01.057 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1164 ms
2020-06-19 10:26:01.489 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:26:01.553 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:26:01.737 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:26:01.753 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:26:01.754 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:26:01.766 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:26:01.788 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:26:02.037 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 2.597 seconds (JVM running for 3.637)
2020-06-19 10:26:06.088 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:26:06.089 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:26:06.100 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 10 ms
2020-06-19 10:26:06.118 [ INFO] [                                                      c.e.a.ArticleApi: 30] - getAllType
2020-06-19 10:26:06.138 [ INFO] [                                                c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 10:26:06.248 [ INFO] [                                                c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 10:26:31.922 [ INFO] [                                                 c.e.b.BlogApplication:    55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 9752 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:26:31.935 [ INFO] [                                                 c.e.b.BlogApplication:   651] - No active profile set, falling back to default profiles: default
2020-06-19 10:26:32.686 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner:    44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:26:32.788 [ INFO] [trationDelegate$BeanPostProcessorChecker:   335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$5301d432] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:26:32.823 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:   236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:26:33.069 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:   108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:26:33.075 [ INFO] [                                             o.a.c.h.Http11NioProtocol:   173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:26:33.076 [ INFO] [                                               o.a.c.c.StandardService:   173] - Starting service [Tomcat]
2020-06-19 10:26:33.076 [ INFO] [                                                o.a.c.c.StandardEngine:   173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:26:33.142 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:   173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:26:33.143 [ INFO] [                                                 o.s.w.c.ContextLoader:   284] - Root WebApplicationContext: initialization completed in 1159 ms
2020-06-19 10:26:33.579 [ INFO] [pertySourcedRequestMappingHandlerMapping:    69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:26:33.662 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:   181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:26:33.843 [ INFO] [                                             o.a.c.h.Http11NioProtocol:   173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:26:33.861 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:   220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:26:33.862 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:   160] - Context refreshed
2020-06-19 10:26:33.873 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:   163] - Found 1 custom documentation plugin(s)
2020-06-19 10:26:33.895 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner:    41] - Scanning for api listing references
2020-06-19 10:26:34.143 [ INFO] [                                                 c.e.b.BlogApplication:    61] - Started BlogApplication in 2.602 seconds (JVM running for 3.663)
2020-06-19 10:26:43.216 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:   173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:26:43.217 [ INFO] [                                             o.s.w.s.DispatcherServlet:   525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:26:43.224 [ INFO] [                                             o.s.w.s.DispatcherServlet:   547] - Completed initialization in 7 ms
2020-06-19 10:26:43.238 [ INFO] [                                                      c.e.a.ArticleApi:    30] - getAllType
2020-06-19 10:26:43.251 [ INFO] [                                                c.z.h.HikariDataSource:   110] - HikariPool-1 - Starting...
2020-06-19 10:26:43.333 [ INFO] [                                                c.z.h.HikariDataSource:   123] - HikariPool-1 - Start completed.
2020-06-19 10:27:02.987 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 18076 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:27:02.999 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:27:03.772 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:27:03.875 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$9f68a9e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:27:03.910 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:27:04.156 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:27:04.163 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:27:04.163 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:27:04.163 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:27:04.227 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:27:04.228 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1164 ms
2020-06-19 10:27:04.667 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:27:04.734 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:27:04.915 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:27:04.932 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:27:04.933 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:27:04.944 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:27:04.964 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:27:05.231 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 2.631 seconds (JVM running for 3.664)
2020-06-19 10:27:09.541 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:27:09.542 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:27:09.549 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 7 ms
2020-06-19 10:27:09.563 [ INFO] [                                                      c.e.a.ArticleApi: 30] - getAllType
2020-06-19 10:27:09.577 [ INFO] [                                                c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 10:27:09.662 [ INFO] [                                                c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 10:27:41.961 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 6504 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:27:41.974 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:27:42.796 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:27:42.901 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$194b686a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:27:42.937 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:27:43.183 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:27:43.189 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:27:43.190 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:27:43.190 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:27:43.254 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:27:43.254 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1226 ms
2020-06-19 10:27:43.686 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:27:43.764 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:27:43.944 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:27:43.962 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:27:43.963 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:27:43.974 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:27:43.996 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:27:44.261 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 2.706 seconds (JVM running for 3.747)
2020-06-19 10:27:47.956 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:27:47.957 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:27:47.965 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 8 ms
2020-06-19 10:27:47.979 [ INFO] [                                                      c.e.a.ArticleApi: 30] - getAllType
2020-06-19 10:27:47.992 [ INFO] [                                                c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 10:27:48.076 [ INFO] [                                                c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 10:40:24.148 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 14880 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:40:24.160 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:40:24.997 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:40:25.120 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$ccbf1ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:40:25.158 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:40:25.422 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:40:25.428 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:40:25.428 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:40:25.429 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:40:25.503 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:40:25.504 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1286 ms
2020-06-19 10:40:25.949 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:40:26.019 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:40:26.202 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:40:26.219 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:40:26.220 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:40:26.231 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:40:26.253 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:40:26.499 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 2.761 seconds (JVM running for 3.864)
2020-06-19 10:40:28.840 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:40:28.841 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:40:28.852 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 11 ms
2020-06-19 10:40:28.988 [ERROR] [                                   o.a.c.c.C.[.[.[.[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.aop.AopLog.log(AopLog.java:32) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.example.api.ArticleApi$$EnhancerBySpringCGLIB$$6f1e5a2b.getAllType(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:834) [?:?]
2020-06-19 10:46:13.861 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 8332 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:46:13.873 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:46:14.743 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:46:14.863 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$57d721b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:46:14.899 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:46:15.302 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:46:15.308 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:46:15.308 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:46:15.309 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:46:15.374 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:46:15.375 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1419 ms
2020-06-19 10:46:15.916 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:46:15.991 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:46:16.218 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:46:16.236 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:46:16.237 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:46:16.250 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:46:16.271 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:46:16.515 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 3.086 seconds (JVM running for 4.187)
2020-06-19 10:46:20.359 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:46:20.360 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:46:20.370 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 9 ms
2020-06-19 10:46:20.394 [ERROR] [                                   o.a.c.c.C.[.[.[.[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.aop.AopLog.log(AopLog.java:33) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.example.api.ArticleApi$$EnhancerBySpringCGLIB$$fb8c75cb.getAllType(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:834) [?:?]
2020-06-19 10:48:29.946 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 16372 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:48:29.957 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:48:30.793 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:48:30.908 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$24e06436] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:48:30.945 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:48:31.214 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:48:31.221 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:48:31.222 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:48:31.222 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:48:31.289 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:48:31.290 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1272 ms
2020-06-19 10:48:31.734 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:48:31.808 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:48:32.012 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:48:32.029 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:48:32.030 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:48:32.042 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:48:32.062 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:48:32.312 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 2.811 seconds (JVM running for 3.914)
2020-06-19 10:48:33.947 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:48:33.948 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:48:33.955 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 7 ms
2020-06-19 10:48:33.981 [ERROR] [                                   o.a.c.c.C.[.[.[.[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.aop.AopLog.log(AopLog.java:33) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.example.api.ArticleApi$$EnhancerBySpringCGLIB$$2a6caf03.getAllType(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:834) [?:?]
2020-06-19 10:49:26.336 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 7916 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:49:26.346 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:49:27.060 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:49:27.296 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$577ab814] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:49:27.337 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:49:27.633 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:49:27.640 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:49:27.641 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:49:27.641 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:49:27.711 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:49:27.711 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1332 ms
2020-06-19 10:49:28.205 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:49:28.321 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:49:28.489 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:49:28.509 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:49:28.510 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:49:28.523 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:49:28.548 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:49:28.841 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 2.835 seconds (JVM running for 5.127)
2020-06-19 10:49:31.054 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:49:31.055 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:49:31.066 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 11 ms
2020-06-19 10:52:09.757 [ERROR] [                                   o.a.c.c.C.[.[.[.[dispatcherServlet]:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.aop.AopLog.log(AopLog.java:33) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.example.api.ArticleApi$$EnhancerBySpringCGLIB$$775925b1.getAllType(<generated>) ~[classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:834) [?:?]
2020-06-19 10:52:10.312 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-19 10:52:15.141 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 8660 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 10:52:15.154 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 10:52:16.075 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 10:52:16.228 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$d626f47e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 10:52:16.278 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 10:52:16.604 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 10:52:16.612 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 10:52:16.612 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 10:52:16.613 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 10:52:16.688 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 10:52:16.688 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1492 ms
2020-06-19 10:52:17.180 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 10:52:17.276 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 10:52:17.442 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 10:52:17.463 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 10:52:17.464 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 10:52:17.476 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 10:52:17.500 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 10:52:17.779 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 3.128 seconds (JVM running for 4.573)
2020-06-19 10:52:20.730 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 10:52:20.731 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 10:52:20.742 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 11 ms
2020-06-19 13:28:41.824 [ INFO] [                                                      c.e.a.ArticleApi: 36] - getAllType        
2020-06-19 13:28:41.912 [ INFO] [                                                c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 13:28:42.319 [ INFO] [                                                c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 13:28:42.474 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-19 13:28:42.477 [ INFO] [                                                c.z.h.HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
2020-06-19 13:28:42.486 [ INFO] [                                                c.z.h.HikariDataSource:352] - HikariPool-1 - Shutdown completed.
2020-06-19 13:29:01.607 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 7956 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 13:29:01.619 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 13:29:02.413 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 13:29:02.526 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$5a766206] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 13:29:02.572 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 13:29:02.755 [ WARN] [ConfigServletWebServerApplicationContext:558] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapperConfigurer' defined in springfox.documentation.spring.web.SpringfoxWebMvcConfiguration: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error at ::0 formal unbound in pointcut 
2020-06-19 13:29:02.761 [ INFO] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-06-19 13:29:02.766 [ERROR] [                                               o.s.b.SpringApplication:837] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapperConfigurer' defined in springfox.documentation.spring.web.SpringfoxWebMvcConfiguration: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error at ::0 formal unbound in pointcut 
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:512) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:241) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:722) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:535) ~[spring-context-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) ~[spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.3.0.RELEASE.jar:2.3.0.RELEASE]
	at com.example.blog.BlogApplication.main(BlogApplication.java:24) [classes/:?]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error at ::0 formal unbound in pointcut 
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1141) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1114) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:506) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 15 more
Caused by: java.lang.IllegalArgumentException: error at ::0 formal unbound in pointcut 
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319) ~[aspectjweaver-1.9.5.jar:?]
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:226) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:289) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:321) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1141) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1114) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:506) ~[spring-beans-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 15 more
2020-06-19 13:32:34.739 [ INFO] [                                                 c.e.b.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 18996 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 13:32:34.755 [ INFO] [                                                 c.e.b.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 13:32:35.768 [ WARN] [                                        o.m.s.m.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 13:32:35.913 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2441e60d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 13:32:35.958 [ INFO] [.w.s.a.s.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 13:32:36.319 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 13:32:36.330 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 13:32:36.330 [ INFO] [                                               o.a.c.c.StandardService:173] - Starting service [Tomcat]
2020-06-19 13:32:36.331 [ INFO] [                                                o.a.c.c.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 13:32:36.427 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 13:32:36.427 [ INFO] [                                                 o.s.w.c.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1617 ms
2020-06-19 13:32:37.066 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 13:32:37.240 [ INFO] [                                        o.s.s.c.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 13:32:37.508 [ INFO] [                                             o.a.c.h.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 13:32:37.544 [ INFO] [                                           o.s.b.w.e.t.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 13:32:37.546 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 13:32:37.568 [ INFO] [d.s.w.p.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 13:32:37.604 [ INFO] [                                  s.d.s.w.s.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 13:32:38.081 [ INFO] [                                                 c.e.b.BlogApplication: 61] - Started BlogApplication in 3.881 seconds (JVM running for 5.367)
2020-06-19 13:32:38.849 [ INFO] [                                                     o.a.c.c.C.[.[.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 13:32:38.850 [ INFO] [                                             o.s.w.s.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 13:32:38.862 [ INFO] [                                             o.s.w.s.DispatcherServlet:547] - Completed initialization in 11 ms
2020-06-19 13:32:38.887 [ INFO] [                                                      c.e.a.ArticleApi: 39] - getAllType        获取文章的所有种类
2020-06-19 13:32:38.909 [ INFO] [                                                c.z.h.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 13:32:39.045 [ INFO] [                                                c.z.h.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 13:34:48.448 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 17212 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 13:34:48.462 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 13:34:49.506 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 13:34:49.655 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$d8382575] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 13:34:49.703 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 13:34:50.060 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 13:34:50.071 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 13:34:50.072 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 13:34:50.073 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 13:34:50.165 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 13:34:50.166 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1642 ms
2020-06-19 13:34:50.829 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 13:34:50.957 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 13:34:51.185 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 13:34:51.206 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 13:34:51.207 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 13:34:51.222 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 13:34:51.247 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 13:34:51.609 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 3.658 seconds (JVM running for 5.103)
2020-06-19 13:34:56.687 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 13:34:56.688 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 13:34:56.697 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 9 ms
2020-06-19 13:34:56.719 [ INFO] [                                            com.example.api.ArticleApi: 39] - getAllType        获取文章的所有种类
2020-06-19 13:34:56.741 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 13:34:56.856 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 13:40:23.752 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 7432 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 13:40:23.763 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 13:40:24.551 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 13:40:24.656 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$e23bb78a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 13:40:24.691 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 13:40:24.976 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 13:40:24.981 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 13:40:24.982 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 13:40:24.982 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 13:40:25.043 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 13:40:25.043 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1220 ms
2020-06-19 13:40:25.487 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 13:40:25.581 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 13:40:25.736 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 13:40:25.752 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 13:40:25.753 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 13:40:25.764 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 13:40:25.784 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 13:40:26.031 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.674 seconds (JVM running for 3.725)
2020-06-19 13:40:27.589 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 13:40:27.590 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 13:40:27.597 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 7 ms
2020-06-19 13:40:27.613 [ INFO] [                                            com.example.api.ArticleApi: 37] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:40:27.626 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 13:40:27.711 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 13:42:19.035 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 8924 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 13:42:19.049 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 13:42:19.908 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 13:42:20.035 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$d724168a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 13:42:20.084 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 13:42:20.397 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 13:42:20.404 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 13:42:20.405 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 13:42:20.405 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 13:42:20.482 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 13:42:20.482 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1381 ms
2020-06-19 13:42:20.932 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 13:42:21.031 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 13:42:21.194 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 13:42:21.213 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 13:42:21.214 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 13:42:21.227 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 13:42:21.249 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 13:42:21.508 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.908 seconds (JVM running for 4.03)
2020-06-19 13:42:22.875 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 13:42:22.875 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 13:42:22.883 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 7 ms
2020-06-19 13:42:22.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.921 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.921 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.921 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.921 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.921 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.922 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.922 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.922 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.922 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.922 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.923 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.923 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.923 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.923 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.924 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.924 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.924 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.924 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.925 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.925 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.925 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.925 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.925 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.926 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.926 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.926 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.926 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.926 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.927 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.927 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.927 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.927 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.928 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.928 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.928 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.928 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.929 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.929 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.929 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.929 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.930 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.930 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.930 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.930 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.930 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.931 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.931 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.931 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.931 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.931 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.931 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.932 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.932 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.932 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.932 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.932 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.933 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.933 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.933 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.933 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.933 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.962 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.962 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.962 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.962 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.962 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.962 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.962 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.963 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.963 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.963 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.963 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.963 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.963 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.964 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.965 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.965 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.965 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.965 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.965 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.966 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.966 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.966 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.966 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.966 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.966 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.966 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.967 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.967 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.967 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.967 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.967 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.967 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.967 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.968 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.968 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.968 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.968 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.968 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.970 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.970 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.970 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.970 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.970 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.970 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:22.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.106 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.107 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.107 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.107 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.107 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.107 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.107 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.107 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.108 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.109 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.110 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.110 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.110 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.110 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.110 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.110 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.110 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.111 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.111 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.111 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.111 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.111 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.111 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.111 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.112 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.112 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.112 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.112 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.112 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.112 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.112 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.113 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.113 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.113 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.113 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.113 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.113 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.113 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.114 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.114 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.114 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.114 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.114 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.114 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.114 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.115 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.115 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.115 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.115 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.115 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.115 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.115 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.116 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.116 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.116 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.116 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.116 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.116 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.116 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.117 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.117 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.117 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.117 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.117 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.118 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.119 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.119 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.119 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.119 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.119 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.119 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.119 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.120 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.120 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.120 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.120 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.120 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.120 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.121 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.121 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.121 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.121 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.121 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.121 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.121 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.122 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.122 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.122 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.122 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.122 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.122 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.122 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.123 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.123 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.123 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.123 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.123 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.123 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.123 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.124 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.124 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.124 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.124 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.124 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.124 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.124 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.125 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.125 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.125 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.125 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.125 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.125 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.125 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.126 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.126 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.126 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.126 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.126 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.126 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.127 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.128 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.128 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.128 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.128 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.128 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.128 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.129 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.129 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.129 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.129 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.129 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.129 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.129 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.130 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.130 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.130 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.130 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.130 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.130 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.130 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.131 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.132 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.133 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.134 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.134 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.134 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.134 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.134 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.134 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.134 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.135 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.136 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.137 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.138 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.139 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.139 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.139 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.139 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.139 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.139 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.140 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.140 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.140 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.140 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.140 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.140 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.140 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.141 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.141 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.141 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.141 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.141 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.141 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.142 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.143 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.143 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.143 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.143 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.143 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.143 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.144 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.145 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.146 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.146 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.146 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.146 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.146 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.146 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.146 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.147 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.148 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.149 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.150 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.151 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.152 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.153 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.154 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.155 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.156 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.157 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.157 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.157 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.157 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.157 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.157 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.157 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.158 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.158 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.158 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.158 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.158 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.158 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.159 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.159 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.159 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.159 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.159 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.160 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.161 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.162 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.162 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.162 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.162 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.162 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.162 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.162 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.163 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.164 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.165 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.166 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.167 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.167 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.167 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.167 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.167 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.167 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.167 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.168 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.168 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.168 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.168 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.168 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.169 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.169 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.169 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.169 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.169 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.170 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.170 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.170 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.170 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.170 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.170 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.171 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.171 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.171 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.171 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.171 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.171 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.171 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.172 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.172 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.172 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.172 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.172 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.172 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.172 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.173 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.173 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.173 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.173 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.173 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.173 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.173 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.174 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.174 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.174 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.174 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.174 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.174 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.174 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.175 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.175 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.175 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.175 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.175 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.175 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.175 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.176 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.177 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.178 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.179 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.180 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.181 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.182 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.183 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.184 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.185 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.186 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.187 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.188 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.189 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.190 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.191 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.192 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.193 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.194 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.194 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.194 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.194 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.194 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.195 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.196 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.197 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.197 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.197 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.197 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.197 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.197 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.197 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.198 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.199 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.200 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.201 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.202 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.203 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.204 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.204 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.204 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.204 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.204 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.204 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.204 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.205 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.206 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.207 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.208 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.208 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.208 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.208 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.208 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.208 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.209 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.209 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.209 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.209 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.209 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.209 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.209 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.210 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.211 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.212 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.213 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.214 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.215 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.216 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.217 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.217 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.217 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.217 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.217 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.217 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.218 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.219 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.220 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.221 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.222 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.223 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.224 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.225 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.226 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.227 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.227 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.227 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.227 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.227 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.227 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.227 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.228 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.228 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.228 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.228 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.228 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.229 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.230 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.231 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.232 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.233 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.234 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.235 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.235 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.235 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.235 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.235 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.235 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.235 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.236 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.237 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.238 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.239 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.240 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.241 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.242 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.243 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.244 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.244 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.244 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.244 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.244 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.244 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.244 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.245 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.246 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.247 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.248 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.249 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.250 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.251 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.252 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.253 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.254 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.255 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.256 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.257 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.258 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.259 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.260 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.261 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.262 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.263 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.264 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.265 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.266 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.267 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.268 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.269 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.270 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.271 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.272 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.273 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.274 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.275 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.276 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.277 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.278 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.279 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.280 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.281 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.282 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.283 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.283 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.283 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.283 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.283 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.283 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.285 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.286 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.286 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.286 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.286 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.286 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.286 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.287 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.287 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.287 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.287 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.287 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.287 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.287 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.288 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.289 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.289 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.289 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.289 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.289 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.289 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.289 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.290 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.290 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.290 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.290 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.290 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.291 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.291 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.291 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.291 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.291 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.291 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.292 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.292 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.292 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.292 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.292 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.292 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.293 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.293 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.293 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.293 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.293 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.293 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.293 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.294 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.294 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.294 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.294 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.294 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.294 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.295 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.295 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.295 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.295 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.295 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.295 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.296 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.296 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.296 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.296 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.296 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.296 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.296 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.297 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.298 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.298 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.298 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.298 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.298 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.298 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.298 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.299 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.300 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.301 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.301 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.301 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.301 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.301 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.301 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.301 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.302 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.303 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.304 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.305 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.305 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.305 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.305 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.305 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.305 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.305 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.306 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.306 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.306 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.306 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.306 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.306 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.306 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.307 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.308 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.309 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.310 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.311 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.311 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.311 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.311 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.311 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.311 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.312 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.312 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.312 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.312 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.312 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.312 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.312 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.313 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.314 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.315 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.316 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.317 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.318 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.319 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.320 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.321 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.322 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.323 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.324 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.325 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.326 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.326 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.326 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.326 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.326 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.326 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.327 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.327 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.327 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.327 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.327 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.327 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.328 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.328 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.328 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.328 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.328 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.328 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.329 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.329 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.329 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.329 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.329 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.329 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.330 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.330 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.330 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.330 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.330 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.330 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.331 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.332 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.333 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.334 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.335 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.335 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.335 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.335 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.335 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.335 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.336 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.337 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.338 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.339 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.340 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.341 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.342 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.343 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.344 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.344 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.344 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.344 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.344 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.344 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.344 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.345 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.346 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.347 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.348 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.348 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.348 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.348 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.348 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.348 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.348 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.349 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.349 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.349 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.349 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.349 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.349 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.349 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.350 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.351 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.351 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.351 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.352 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.353 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.354 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.354 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.354 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.354 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.354 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.354 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.354 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.355 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.355 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.355 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.355 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.355 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.355 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.356 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.356 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.356 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.356 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.356 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.357 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.357 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.357 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.357 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.357 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.357 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.357 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.358 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.359 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.360 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.361 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.362 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.363 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.364 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.365 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.366 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.367 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.367 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.367 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.367 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.367 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.367 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.368 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.368 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.368 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.368 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.368 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.368 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.369 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.369 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.369 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.369 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.369 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.369 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.370 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.370 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.370 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.370 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.370 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.370 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.370 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.371 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.372 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.372 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.372 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.373 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.373 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.373 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.373 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.373 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.374 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.374 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.374 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.374 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.375 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.376 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.376 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.376 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.376 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.376 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.376 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.377 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.377 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.377 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.377 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.378 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.378 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.378 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.378 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.378 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.379 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.379 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.379 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.379 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.379 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.380 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.380 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.380 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.380 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.380 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.380 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.381 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.381 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.381 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.381 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.381 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.381 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.382 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.383 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.384 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.385 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.386 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.387 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.388 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.388 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.388 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.388 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.388 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.388 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.388 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.389 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.389 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.389 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.389 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.389 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.389 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.389 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.390 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.391 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.391 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.391 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.391 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.391 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.392 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.392 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.392 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.392 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.392 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.393 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.393 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.393 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.393 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.393 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.393 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.393 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.394 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.395 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.395 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.395 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.395 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.395 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.395 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.396 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.396 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.396 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.396 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.396 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.396 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.397 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.397 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.397 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.397 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.397 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.397 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.398 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.398 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.398 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.398 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.398 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.398 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.399 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.399 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.399 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.399 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.399 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.399 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.399 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.400 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.400 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.400 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.400 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.400 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.400 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.401 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.401 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.401 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.401 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.401 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.401 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.402 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.402 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.402 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.402 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.402 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.402 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.403 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.403 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.403 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.403 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.403 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.404 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.404 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.404 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.404 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.404 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.404 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.404 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.405 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.405 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.405 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.405 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.405 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.405 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.406 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.406 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.406 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.406 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.407 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.407 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.407 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.407 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.407 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.408 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.408 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.408 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.408 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.408 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.408 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.409 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.409 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.409 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.409 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.410 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.411 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.412 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.413 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.414 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.415 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.415 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.415 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.415 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.415 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.415 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.415 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.416 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.416 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.416 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.416 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.416 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.416 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.416 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.417 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.418 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.418 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.418 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.418 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.418 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.418 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.419 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.420 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.421 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.422 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.423 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.424 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.425 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.426 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.427 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.428 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.429 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.430 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.430 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.430 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.430 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.430 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.430 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.430 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.431 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.432 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.433 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.434 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.435 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.436 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.437 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.438 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.439 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.440 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.441 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.442 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.443 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.444 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.445 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.446 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.447 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.448 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.449 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.450 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.451 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.452 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.453 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.454 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.455 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.456 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.457 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.458 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.459 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.460 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.461 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.462 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.463 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.464 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.465 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.466 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.467 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.468 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.469 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.470 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.471 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.472 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.473 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.474 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.475 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.476 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.477 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.477 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.477 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.477 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.477 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.477 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.477 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.478 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.479 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.479 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.479 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.479 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.479 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.480 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.480 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.480 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.480 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.480 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.480 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.481 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.481 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.481 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.481 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.481 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.481 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.481 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.482 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.482 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.482 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.482 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.482 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.482 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.482 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.483 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.484 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.484 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.484 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.484 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.484 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.484 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.484 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.485 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.486 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.486 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.486 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.486 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.486 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.486 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.486 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.487 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.487 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.487 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.487 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.487 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.487 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.487 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.488 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.489 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.490 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.490 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.490 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.490 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.490 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.490 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.490 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.491 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.491 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.491 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.491 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.491 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.491 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.491 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.492 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.492 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.492 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.492 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.492 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.492 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.493 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.493 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.493 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.493 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.493 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.493 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.494 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.494 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.494 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.494 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.494 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.494 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.495 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.496 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.497 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.498 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.498 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.498 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.498 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.498 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.498 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.498 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.499 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.500 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.500 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.500 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.500 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.500 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.500 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.501 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.501 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.501 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.501 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.501 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.501 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.501 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.502 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.503 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.504 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.505 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.506 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.507 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.507 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.507 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.507 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.507 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.507 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.508 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.509 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.509 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.509 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.509 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.509 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.510 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.510 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.510 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.510 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.510 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.511 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.511 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.511 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.511 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.511 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.511 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.512 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.512 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.512 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.512 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.512 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.512 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.513 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.513 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.513 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.513 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.513 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.513 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.514 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.514 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.514 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.514 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.514 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.514 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.514 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.515 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.515 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.515 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.515 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.515 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.515 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.516 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.516 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.516 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.516 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.516 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.517 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.517 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.517 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.517 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.517 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.517 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.518 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.518 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.518 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.518 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.518 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.518 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.519 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.519 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.519 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.519 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.519 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.520 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.521 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.521 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.521 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.521 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.521 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.522 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.522 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.522 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.522 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.522 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.522 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.523 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.524 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.524 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.524 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.524 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.524 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.524 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.525 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.525 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.525 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.525 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.525 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.525 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.526 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.526 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.526 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.526 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.526 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.526 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.526 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.527 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.527 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.527 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.527 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.527 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.527 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.528 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.528 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.528 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.528 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.528 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.528 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.528 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.529 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.529 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.529 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.529 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.530 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.530 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.530 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.531 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.531 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.531 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.531 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.531 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.532 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.532 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.532 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.532 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.533 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.533 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.533 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.533 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.533 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.534 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.534 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.534 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.534 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.535 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.535 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.535 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.535 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.535 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.535 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.535 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.536 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.536 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.536 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.536 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.536 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.536 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.537 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.537 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.537 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.537 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.537 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.537 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.537 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.538 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.539 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.539 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.539 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.539 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.539 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.540 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.540 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.540 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.540 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.540 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.540 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.541 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.541 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.541 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.541 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.541 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.541 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.541 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.542 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.542 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.542 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.542 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.542 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.543 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.543 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.543 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.543 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.543 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.544 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.544 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.544 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.544 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.544 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.544 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.544 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.545 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.546 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.547 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.548 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.548 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.548 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.548 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.548 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.549 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.550 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.551 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.552 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.553 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.553 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.553 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.553 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.553 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.553 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.553 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.554 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.555 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.555 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.555 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.555 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.555 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.555 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.555 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.556 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.556 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.556 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.556 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.556 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.556 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.557 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.557 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.557 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.557 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.557 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.557 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.557 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.558 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.559 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.560 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.560 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.560 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.560 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.560 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.560 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.560 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.561 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.562 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.562 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.562 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.562 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.562 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.562 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.562 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.563 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.563 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.563 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.563 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.563 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.563 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.564 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.564 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.564 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.564 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.565 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.565 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.565 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.565 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.565 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.566 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.567 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.567 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.567 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.567 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.567 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.567 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.567 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.568 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.568 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.568 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.568 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.568 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.568 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.569 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.570 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.570 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.570 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.570 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.570 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.570 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.570 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.571 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.571 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.571 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.571 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.571 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.571 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.571 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.572 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.572 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.572 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.572 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.572 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.573 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.573 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.573 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.573 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.573 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.573 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.573 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.574 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.575 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.576 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.577 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.578 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.578 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.578 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.578 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.578 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.578 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.578 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.579 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.579 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.579 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.579 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.579 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.579 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.580 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.580 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.580 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.580 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.580 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.580 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.580 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.581 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.581 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.581 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.581 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.581 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.581 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.581 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.582 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.583 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.583 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.583 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.583 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.583 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.583 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.584 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.584 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.584 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.584 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.584 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.584 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.584 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.585 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.586 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.587 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.588 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.589 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.590 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.590 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.590 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.590 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.590 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.590 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.591 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.591 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.591 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.591 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.591 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.591 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.591 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.592 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.592 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.592 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.592 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.592 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.592 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.592 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.593 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.593 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.593 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.593 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.593 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.593 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.593 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.594 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.594 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.594 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.594 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.594 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.594 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.594 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.595 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.595 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.595 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.595 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.595 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.595 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.595 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.596 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.596 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.596 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.596 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.596 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.596 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.597 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.598 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.598 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.598 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.598 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.598 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.598 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.598 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.599 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.599 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.599 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.599 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.599 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.599 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.600 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.600 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.600 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.600 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.600 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.600 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.600 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.601 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.601 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.601 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.601 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.601 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.601 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.602 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.603 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.604 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.604 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.604 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.604 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.604 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.604 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.605 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.606 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.606 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.606 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.606 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.606 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.607 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.607 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.607 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.607 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.607 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.607 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.608 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.608 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.608 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.608 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.608 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.609 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.609 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.609 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.609 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.609 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.609 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.610 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.610 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.610 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.610 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.610 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.610 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.610 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.611 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.611 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.611 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.611 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.611 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.611 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.611 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.612 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.613 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.613 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.613 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.613 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.613 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.613 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.613 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.614 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.615 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.616 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.617 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.617 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.617 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.617 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.617 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.617 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.618 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.618 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.618 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.618 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.618 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.618 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.618 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.619 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.620 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.620 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.620 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.620 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.620 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.620 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.620 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.621 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.622 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.623 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.623 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.623 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.623 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.623 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.623 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.623 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.624 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.625 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.625 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.625 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.625 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.625 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.625 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.626 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.627 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.628 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.629 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.629 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.629 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.629 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.629 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.629 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.629 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.630 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.630 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.630 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.630 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.630 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.630 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.630 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.631 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.632 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.633 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.634 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.635 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.636 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.637 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.638 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.638 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.638 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.639 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.640 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.641 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.642 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.643 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.644 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.645 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.646 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.646 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.646 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.646 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.646 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.646 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.646 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.647 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.648 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.648 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.648 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.648 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.649 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.650 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.651 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.652 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.653 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.654 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.655 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.656 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.657 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.658 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.659 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.660 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.661 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.662 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.663 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.664 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.665 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.666 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.667 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.668 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.669 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.670 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.671 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.672 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.673 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.673 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.673 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.673 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.673 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.673 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.674 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.675 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.676 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.677 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.678 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.679 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.680 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.681 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.682 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.683 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.684 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.685 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.686 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.687 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.688 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.689 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.690 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.691 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.692 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.693 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.694 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.695 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.696 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.697 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.698 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.699 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.700 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.701 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.702 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.703 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.704 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.705 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.706 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.707 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.708 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.708 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.708 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.708 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.708 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.708 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.709 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.709 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.709 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.709 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.709 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.709 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.710 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.710 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.710 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.710 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.710 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.710 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.710 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.711 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.712 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.712 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.712 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.712 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.712 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.712 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.712 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.713 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.713 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.713 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.713 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.713 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.713 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.713 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.714 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.714 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.714 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.714 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.714 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.714 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.714 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.715 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.715 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.715 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.715 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.715 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.716 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.716 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.716 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.716 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.716 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.716 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.716 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.717 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.718 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.719 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.719 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.719 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.719 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.719 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.719 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.719 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.720 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.721 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.721 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.721 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.721 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.721 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.721 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.721 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.722 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.722 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.722 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.722 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.722 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.722 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.723 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.723 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.723 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.723 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.723 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.723 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.724 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.724 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.724 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.724 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.724 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.724 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.724 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.725 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.725 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.725 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.725 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.725 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.725 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.725 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.726 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.726 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.726 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.726 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.726 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.726 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.726 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.727 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.728 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.729 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.729 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.729 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.729 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.729 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.729 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.729 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.730 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.730 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.730 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.730 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.730 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.730 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.730 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.731 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.731 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.731 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.732 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.732 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.732 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.732 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.732 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.733 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.734 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.735 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.736 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.736 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.736 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.736 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.736 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.736 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.737 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.738 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.738 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.738 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.738 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.738 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.739 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.740 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.740 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.740 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.740 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.740 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.740 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.740 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.741 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.742 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.742 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.742 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.742 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.742 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.742 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.743 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.743 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.743 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.743 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.743 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.743 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.744 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.744 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.744 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.744 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.744 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.745 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.745 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.745 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.745 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.745 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.745 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.746 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.746 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.746 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.746 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.746 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.747 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.747 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.747 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.747 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.747 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.747 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.747 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.748 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.748 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.748 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.748 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.748 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.748 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.748 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.749 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.749 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.749 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.749 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.749 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.749 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.750 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.751 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.752 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.752 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.752 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.752 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.752 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.752 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.752 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.753 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.753 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.753 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.753 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.753 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.753 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.753 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.754 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.754 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.754 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.754 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.754 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.754 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.754 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.755 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.755 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.755 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.755 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.755 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.755 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.755 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.756 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.756 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.756 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.756 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.756 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.756 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.757 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.758 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.759 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.760 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.760 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.760 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.760 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.760 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.760 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.760 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.761 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.762 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.762 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.762 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.762 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.762 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.763 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.763 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.763 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.763 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.763 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.763 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.764 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.764 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.764 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.764 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.764 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.764 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.765 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.765 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.765 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.765 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.765 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.765 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.765 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.766 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.766 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.766 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.766 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.766 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.766 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.766 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.767 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.767 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.767 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.767 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.767 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.767 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.768 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.769 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.770 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.770 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.770 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.770 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.770 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.770 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.771 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.771 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.771 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.771 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.771 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.772 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.772 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.772 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.772 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.773 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.773 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.773 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.773 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.774 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.774 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.774 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.774 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.774 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.775 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.776 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.776 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.776 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.776 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.776 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.776 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.777 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.778 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.778 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.778 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.778 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.778 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.778 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.779 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.779 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.779 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.779 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.779 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.780 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.781 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.781 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.781 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.781 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.781 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.781 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.782 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.782 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.782 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.782 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.782 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.782 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.783 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.783 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.783 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.783 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.783 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.784 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.784 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.784 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.784 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.784 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.784 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.785 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.785 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.785 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.785 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.785 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.785 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.785 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.786 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.786 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.786 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.787 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.787 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.787 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.787 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.787 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.787 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.788 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.788 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.788 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.788 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.788 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.788 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.789 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.789 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.789 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.789 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.789 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.789 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.790 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.790 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.790 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.790 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.790 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.790 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.791 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.792 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.792 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.792 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.792 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.792 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.792 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.792 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.793 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.794 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.794 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.794 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.794 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.794 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.794 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.795 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.795 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.795 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.795 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.795 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.795 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.795 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.796 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.796 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.796 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.796 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.796 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.796 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.796 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.797 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.797 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.797 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.797 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.797 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.797 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.798 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.798 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.798 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.798 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.798 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.798 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.798 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.799 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.799 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.799 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.799 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.799 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.799 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.799 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.800 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.800 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.800 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.800 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.800 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.800 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.800 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.801 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.801 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.801 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.801 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.801 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.802 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.803 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.804 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.804 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.804 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.804 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.804 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.804 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.804 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.805 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.805 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.805 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.805 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.805 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.805 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.805 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.806 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.806 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.806 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.806 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.806 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.807 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.807 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.807 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.807 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.807 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.807 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.808 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.808 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.808 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.808 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.808 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.808 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.809 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.809 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.809 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.809 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.809 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.809 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.809 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.810 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.811 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.812 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.812 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.812 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.812 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.812 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.813 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.813 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.813 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.813 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.813 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.813 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.814 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.815 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.816 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.817 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.818 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.819 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.819 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.819 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.819 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.819 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.819 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.820 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.821 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.822 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.823 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.824 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.824 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.824 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.824 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.824 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.824 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.825 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.825 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.825 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.825 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.825 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.825 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.826 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.826 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.826 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.826 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.826 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.827 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.828 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.829 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.829 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.829 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.829 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.829 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.829 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.829 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.830 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.831 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.832 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.832 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.832 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.832 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.832 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.832 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.833 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.833 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.833 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.833 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.833 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.833 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.833 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.834 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.834 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.834 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.834 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.834 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.834 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.835 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.835 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.835 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.835 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.835 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.835 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.835 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.836 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.836 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.836 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.836 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.836 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.836 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.836 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.837 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.837 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.837 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.837 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.837 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.837 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.838 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.839 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.839 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.839 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.839 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.839 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.839 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.839 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.840 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.840 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.840 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.840 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.840 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.840 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.840 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.841 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.842 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.843 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.844 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.845 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.845 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.845 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.845 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.845 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.845 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.846 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.846 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.846 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.846 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.846 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.847 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.848 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.849 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.850 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.851 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.852 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.853 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.853 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.853 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.853 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.853 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.854 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.854 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.854 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.854 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.854 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.854 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.854 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.855 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.855 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.855 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.856 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.856 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.856 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.856 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.856 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.857 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.857 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.857 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.857 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.857 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.857 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.858 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.859 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.860 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.860 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.860 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.860 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.860 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.860 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.860 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.861 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.861 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.861 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.861 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.861 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.861 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.862 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.862 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.862 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.862 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.862 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.862 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.862 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.863 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.863 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.863 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.863 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.863 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.863 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.863 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.864 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.864 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.864 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.864 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.864 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.864 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.864 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.865 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.865 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.865 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.865 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.865 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.865 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.865 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.866 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.866 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.866 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.866 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.866 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.866 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.866 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.867 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.867 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.867 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.867 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.867 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.867 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.868 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.869 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.870 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.870 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.870 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.870 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.870 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.870 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.870 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.871 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.871 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.871 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.871 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.871 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.871 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.871 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.872 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.872 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.872 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.872 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.872 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.872 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.873 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.874 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.875 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.876 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.877 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.878 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.879 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.880 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.881 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.881 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.881 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.881 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.881 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.881 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.882 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.882 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.882 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.882 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.882 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.882 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.883 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.884 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.885 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.886 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.887 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.887 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.887 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.887 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.887 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.888 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.888 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.888 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.888 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.888 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.888 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.889 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.890 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.891 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.892 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.893 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.894 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.894 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.894 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.894 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.894 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.894 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.895 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.895 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.895 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.895 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.895 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.895 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.895 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.896 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.896 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.896 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.896 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.896 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.896 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.897 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.897 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.897 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.897 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.897 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.897 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.897 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.898 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.898 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.898 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.898 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.898 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.898 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.898 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.899 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.899 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.899 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.899 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.899 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.899 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.899 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.900 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.900 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.900 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.900 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.900 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.900 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.901 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.901 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.901 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.901 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.901 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.901 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.902 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.902 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.902 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.902 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.902 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.902 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.902 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.903 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.904 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.905 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.906 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.907 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.908 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.909 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.910 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.911 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.912 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.913 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.914 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.915 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.916 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.917 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.918 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.919 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.920 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.933 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.933 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.934 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.935 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.936 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.937 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.938 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.939 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.940 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.941 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.942 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.943 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.944 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.945 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.946 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.947 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.948 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.949 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.950 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.951 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.952 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.953 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.954 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.955 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.956 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.957 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.958 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.959 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.960 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.961 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.968 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.969 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.970 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.971 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.972 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.973 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.974 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.975 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.976 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.977 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.978 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.979 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.980 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.981 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.982 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.983 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.984 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.985 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.986 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.987 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.988 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.989 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.990 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.991 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.992 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.993 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.994 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.995 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.996 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.997 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.998 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:23.999 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.000 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.001 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.002 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.003 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.004 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.005 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.006 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.007 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.008 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.009 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.010 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.011 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.012 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.013 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.014 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.015 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.016 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.017 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.018 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.019 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.020 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.021 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.022 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.023 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.024 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.025 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.026 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.027 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.028 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.029 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.030 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.031 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.032 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.033 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.034 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.035 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.036 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.037 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.038 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.039 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.040 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.041 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.042 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.043 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.044 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.045 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.046 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.047 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.048 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.049 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.050 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.051 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.052 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.053 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.054 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.055 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.056 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.057 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.058 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.059 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.060 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.061 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.062 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.063 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.064 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.065 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.066 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.067 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.068 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.069 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.070 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.071 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.072 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.073 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.074 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.075 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.076 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.077 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.078 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.079 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.080 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.081 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.082 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.083 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.084 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.085 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.086 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.087 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.088 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.089 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.090 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.091 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.092 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]作用
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.093 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.094 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.095 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.096 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.097 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.098 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.099 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.100 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.101 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.102 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.103 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.104 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.105 [ INFO] [                                            com.example.api.ArticleApi: 38] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 13:42:24.121 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 13:42:24.222 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 13:57:48.113 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 18728 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 13:57:48.126 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 13:57:48.984 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 13:57:49.091 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1c1645f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 13:57:49.127 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 13:57:49.394 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 13:57:49.400 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 13:57:49.401 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 13:57:49.401 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 13:57:49.465 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 13:57:49.465 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1271 ms
2020-06-19 13:57:49.920 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 13:57:50.016 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 13:57:50.177 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 13:57:50.194 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 13:57:50.195 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 13:57:50.206 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 13:57:50.227 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 13:57:50.508 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.821 seconds (JVM running for 3.878)
2020-06-19 13:57:53.583 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 13:57:53.584 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 13:57:53.593 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 9 ms
2020-06-19 13:57:53.623 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 13:57:53.736 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 13:57:53.906 [ INFO] [                                            com.example.api.ArticleApi: 50] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 14:05:37.735 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [299] milliseconds.
2020-06-19 14:05:37.791 [ INFO] [                                               com.example.api.UserApi: 50] - 登录   调用方法[login]
2020-06-19 14:05:38.042 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:05:38.217 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:05:38.550 [ INFO] [                                              com.example.api.DraftApi: 50] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 14:05:38.575 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:05:39.147 [ INFO] [                                            com.example.api.ArticleApi: 50] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 14:05:39.172 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:06:54.461 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:06:55.205 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:06:55.448 [ INFO] [                                              com.example.api.DraftApi: 50] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 14:06:55.531 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:06:55.531 [ INFO] [                                              com.example.api.DraftApi: 50] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 14:08:35.731 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:08:35.942 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:08:36.016 [ INFO] [                                              com.example.api.DraftApi: 50] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 14:08:36.269 [ INFO] [                                              com.example.api.DraftApi: 50] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 14:08:36.293 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:08:36.293 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:04.439 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:04.772 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:04.796 [ INFO] [                                              com.example.api.DraftApi: 50] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 14:10:04.940 [ INFO] [                                              com.example.api.DraftApi: 50] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 14:10:04.989 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:04.989 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:18.147 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:18.866 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:19.156 [ INFO] [                                              com.example.api.DraftApi: 50] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 14:10:19.181 [ INFO] [                                               com.example.api.UserApi: 50] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:10:19.181 [ INFO] [                                              com.example.api.DraftApi: 50] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 14:12:49.744 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 6484 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 14:12:49.760 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 14:12:50.530 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 14:12:50.639 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1114e676] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 14:12:50.677 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 14:12:50.937 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 14:12:50.943 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 14:12:50.944 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 14:12:50.944 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 14:12:51.010 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 14:12:51.010 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1210 ms
2020-06-19 14:12:51.479 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 14:12:51.580 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 14:12:51.740 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 14:12:51.756 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 14:12:51.757 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 14:12:51.768 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 14:12:51.789 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 14:12:52.089 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.762 seconds (JVM running for 3.903)
2020-06-19 14:12:53.476 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 14:12:53.477 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 14:12:53.490 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 12 ms
2020-06-19 14:14:03.866 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [375] milliseconds.
2020-06-19 14:14:03.890 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 14:14:03.995 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 14:14:04.189 [ INFO] [                                               com.example.api.UserApi: 51] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:14:04.554 [ INFO] [                                              com.example.api.DraftApi: 51] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 14:14:04.602 [ INFO] [                                               com.example.api.UserApi: 51] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:14:04.602 [ INFO] [                                               com.example.api.UserApi: 51] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:14:04.962 [ INFO] [                                               com.example.api.UserApi: 51] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 14:14:04.986 [ INFO] [                                            com.example.api.ArticleApi: 51] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 16:31:37.879 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 7628 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 16:31:37.891 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 16:31:38.727 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 16:31:38.833 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$24e06436] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 16:31:38.871 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 16:31:39.131 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 16:31:39.137 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 16:31:39.138 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 16:31:39.138 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 16:31:39.205 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 16:31:39.205 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1266 ms
2020-06-19 16:31:39.794 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 16:31:39.939 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 16:31:40.157 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 16:31:40.181 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 16:31:40.182 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 16:31:40.196 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 16:31:40.227 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 16:31:40.568 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 3.095 seconds (JVM running for 4.262)
2020-06-19 16:31:49.461 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 16:31:49.461 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 16:31:49.469 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 8 ms
2020-06-19 16:31:49.932 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [395] milliseconds.
2020-06-19 16:31:49.954 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 16:31:50.081 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 16:31:50.183 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 16:31:50.815 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 16:31:50.906 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 16:31:51.005 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 16:31:51.315 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 16:31:51.339 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 16:32:48.495 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 18120 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 16:32:48.520 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 16:32:49.480 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 16:32:49.586 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$425ddf00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 16:32:49.623 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 16:32:49.897 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 16:32:49.902 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 16:32:49.903 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 16:32:49.904 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 16:32:49.967 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 16:32:49.967 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1373 ms
2020-06-19 16:32:50.426 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 16:32:50.540 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 16:32:50.702 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 16:32:50.719 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 16:32:50.720 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 16:32:50.750 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 16:32:50.818 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 16:32:51.116 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 3.137 seconds (JVM running for 4.327)
2020-06-19 16:33:08.279 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 16:33:08.281 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 16:33:08.292 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 11 ms
2020-06-19 16:33:08.320 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 16:33:08.433 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 17:05:51.078 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [391] milliseconds.
2020-06-19 17:05:51.206 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:05:52.170 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:05:52.700 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 17:05:52.783 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:05:52.783 [ INFO] [                                              com.example.api.DraftApi: 55] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 17:08:19.001 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:08:19.163 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:08:27.714 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:08:28.350 [ INFO] [                                              com.example.api.DraftApi: 55] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 17:08:28.399 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 17:08:28.399 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:08:28.400 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:08:38.351 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:08:38.492 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:09:01.414 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:09:01.543 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:09:32.096 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:09:32.247 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:11.875 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:12.006 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:28.132 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:28.261 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:31.671 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:31.944 [ INFO] [                                              com.example.api.DraftApi: 55] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 17:10:32.058 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:32.235 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 17:10:32.284 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:50.460 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:50.654 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:50.780 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 17:10:50.804 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:50.980 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:10:51.005 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 17:18:26.266 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 11260 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 17:18:26.274 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 17:18:27.579 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 17:18:27.782 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$6cab145e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 17:18:27.847 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 17:18:28.335 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 17:18:28.353 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 17:18:28.354 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 17:18:28.355 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 17:18:28.492 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 17:18:28.493 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 2156 ms
2020-06-19 17:18:29.352 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 17:18:29.468 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 17:18:29.647 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 17:18:29.666 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 17:18:29.667 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 17:18:29.701 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 17:18:29.724 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 17:18:30.044 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 4.214 seconds (JVM running for 6.079)
2020-06-19 17:23:53.386 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 17:23:53.386 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 17:23:53.393 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 6 ms
2020-06-19 17:23:53.741 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [293] milliseconds.
2020-06-19 17:23:53.766 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 17:23:53.985 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 17:23:54.084 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:23:54.982 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:23:55.223 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:05.028 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:05.269 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:05.456 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 17:25:05.480 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:05.580 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 17:25:05.604 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:08.147 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:08.484 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 17:25:08.533 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:08.533 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:08.608 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:08.859 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 17:25:10.197 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:11.020 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:25:11.250 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:26:23.225 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:26:28.567 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:26:31.151 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:26:31.273 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:33:58.903 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:33:59.899 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 17:34:03.011 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:03.779 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:03.998 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:04.250 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:05.390 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 17:34:06.134 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:06.501 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 17:34:06.523 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:07.745 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:08.511 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:08.740 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:59.002 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:59.432 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:34:59.481 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 17:35:00.768 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:01.490 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:01.824 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:01.847 [ INFO] [                                              com.example.api.DraftApi: 55] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 17:35:01.847 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 17:35:02.856 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:03.099 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:03.126 [ INFO] [                                              com.example.api.DraftApi: 55] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 17:35:03.126 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:03.367 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:03.392 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 17:35:10.131 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:11.491 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 17:35:11.687 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:11.687 [ INFO] [                                              com.example.api.DraftApi: 55] - 根据草稿主键获取草稿，有权限限制   调用方法[getDraftById]
2020-06-19 17:35:12.317 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:13.091 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:13.298 [ INFO] [                                              com.example.api.DraftApi: 55] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 17:35:13.322 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 17:35:13.322 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:14.621 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:15.417 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:15.649 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章总数   调用方法[getArticlePages]
2020-06-19 17:35:15.674 [ INFO] [                                            com.example.api.ArticleApi: 55] - 分页获取文章列表   调用方法[getArticles]
2020-06-19 17:35:30.656 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:31.353 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:31.730 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的总页数   调用方法[getDraftPages]
2020-06-19 17:35:31.754 [ INFO] [                                              com.example.api.DraftApi: 55] - 分页获取草稿   调用方法[getDraftList]
2020-06-19 17:35:31.754 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:33.494 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:33.936 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:34.544 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:34.569 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:51.041 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:52.495 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:35:55.042 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:36:00.550 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:36:03.057 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 17:36:04.971 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:12:44.099 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:12:52.182 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:12:52.466 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:12:57.555 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:12:57.729 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:12:58.037 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:13:30.251 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:13:30.436 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:08.547 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:08.735 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:08.832 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:14:09.063 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:09.088 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:14:09.088 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:11.436 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:12.281 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:14:14.293 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:15.235 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:15.260 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:14:15.469 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:15.632 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:14:15.657 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:16.401 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:14:22.758 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:22.996 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:23.125 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:14:23.311 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:23.336 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:23.500 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:14:24.465 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:25.565 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:25.587 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:27.424 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:27.676 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:27.999 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:14:28.023 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:28.097 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:14:28.121 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:29.530 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:30.607 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:14:30.633 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:15:03.697 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:15:03.893 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:15:04.023 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:15:04.233 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:15:04.258 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:15:04.258 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:15:04.791 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:15:05.584 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:15:05.792 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:16:26.231 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:16:26.554 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:16:26.579 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:16:26.744 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:16:26.767 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:16:26.767 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:16:27.177 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:16:27.952 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:16:28.159 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:36.808 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 21280 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 19:19:36.817 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 19:19:37.618 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 19:19:37.748 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$e347eff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 19:19:37.788 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 19:19:38.094 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 19:19:38.101 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 19:19:38.101 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 19:19:38.102 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 19:19:38.184 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 19:19:38.184 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1330 ms
2020-06-19 19:19:38.751 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 19:19:38.863 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 19:19:39.070 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 19:19:39.094 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 19:19:39.095 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 19:19:39.108 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 19:19:39.132 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 19:19:39.446 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.953 seconds (JVM running for 4.425)
2020-06-19 19:19:46.722 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 19:19:46.723 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 19:19:46.732 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 9 ms
2020-06-19 19:19:50.396 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [337] milliseconds.
2020-06-19 19:19:50.411 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 19:19:50.493 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 19:19:50.661 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:50.889 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:19:51.001 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:51.001 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:51.167 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:51.262 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:19:52.731 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:53.821 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:53.847 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:56.883 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:19:57.245 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:19:57.530 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:01.087 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 16572 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 19:21:01.104 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 19:21:01.912 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 19:21:02.018 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$119ac7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 19:21:02.054 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 19:21:02.314 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 19:21:02.321 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 19:21:02.321 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 19:21:02.321 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 19:21:02.387 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 19:21:02.387 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1233 ms
2020-06-19 19:21:02.863 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 19:21:02.961 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 19:21:03.122 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 19:21:03.140 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 19:21:03.141 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 19:21:03.154 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 19:21:03.174 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 19:21:03.434 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.811 seconds (JVM running for 3.955)
2020-06-19 19:21:06.910 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 19:21:06.911 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 19:21:06.920 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 9 ms
2020-06-19 19:21:07.384 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [401] milliseconds.
2020-06-19 19:21:07.402 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 19:21:07.500 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 19:21:07.738 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:08.044 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:21:08.068 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:09.443 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:10.173 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:10.392 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:13.771 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:19.849 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:21:23.479 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:22:12.797 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 11328 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 19:22:12.812 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 19:22:13.646 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 19:22:13.771 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$303b1b5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 19:22:13.810 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 19:22:14.089 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 19:22:14.095 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 19:22:14.096 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 19:22:14.096 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 19:22:14.160 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 19:22:14.161 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1292 ms
2020-06-19 19:22:14.717 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 19:22:14.827 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 19:22:15.009 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 19:22:15.028 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 19:22:15.029 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 19:22:15.047 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 19:22:15.069 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 19:22:15.350 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.985 seconds (JVM running for 4.251)
2020-06-19 19:23:31.012 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 19:23:31.015 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 19:23:31.028 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 12 ms
2020-06-19 19:23:31.480 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [374] milliseconds.
2020-06-19 19:23:31.502 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 19:23:31.600 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 19:23:31.771 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:23:32.116 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:23:32.385 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:23:34.925 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:23:36.025 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:23:36.050 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:24:49.842 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:25:06.810 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:25:07.099 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:25:07.262 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:25:07.369 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:25:07.394 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:25:07.635 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:25:09.997 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:25:10.991 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:25:11.016 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:35.362 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:35.980 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:36.303 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:27:36.335 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:36.456 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:27:36.522 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:40.400 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:41.530 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:27:46.855 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:47.639 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:47.848 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:27:47.897 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:27:48.919 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:49.259 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:49.557 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:27:49.631 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:27:49.631 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:27:59.932 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:00.420 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:00.673 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:28:00.697 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:00.697 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:28:07.560 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:08.312 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:08.520 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:16.244 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:16.728 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:28:16.778 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:28:16.801 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:28:16.934 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:25.952 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:26.484 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:26.771 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:29:26.771 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:29:26.795 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:26.905 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:27.672 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:27.890 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:48.651 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:48.992 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:49.179 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:29:49.205 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:29:49.303 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:49.967 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:50.739 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:29:50.947 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:05.583 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:05.996 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:06.248 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:30:06.279 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:06.279 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:30:17.191 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:17.543 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:17.863 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:30:17.894 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:17.894 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:30:29.309 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:29.616 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:29.955 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:30:30.011 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:30.011 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:30:38.629 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:39.951 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:30:43.431 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:44.325 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:44.488 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 19:30:44.861 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:44.884 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 19:30:46.205 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:47.272 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:30:47.296 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:30:47.296 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:49.163 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:49.505 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:49.838 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:30:49.863 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:30:49.863 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:52.150 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:52.970 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:30:53.133 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:32:04.427 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:32:04.774 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:32:04.975 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:32:05.016 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:32:05.129 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:32:07.771 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:32:08.567 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:32:25.893 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:32:26.635 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:32:26.865 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:32:26.890 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:34:30.900 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:31.197 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:31.518 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:34:31.542 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:34:31.542 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:33.137 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:33.878 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:34.119 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:44.746 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:45.319 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:45.515 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:34:45.540 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:45.540 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:34:48.914 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:49.310 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:34:49.361 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:49.729 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:49.754 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:34:52.478 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:52.865 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:34:52.893 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:53.226 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:34:53.250 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:54.202 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:54.869 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:34:55.198 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:37:44.963 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:37:45.370 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:37:45.468 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:37:45.493 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:37:45.603 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:37:47.986 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:37:48.804 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:37:48.989 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:32.820 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:33.250 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:40:33.502 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:36.604 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:37.150 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:40:37.175 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:38.307 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:39.070 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:39.278 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 19:40:39.302 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 19:40:40.801 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 19:40:41.562 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的所有种类   调用方法[getAllType]
2020-06-19 19:45:34.726 [ INFO] [                                 com.example.blog.BlogApplicationTests: 55] - Starting BlogApplicationTests on DESKTOP-PLSELLL with PID 9808 (started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 19:45:34.735 [ INFO] [                                 com.example.blog.BlogApplicationTests:651] - No active profile set, falling back to default profiles: default
2020-06-19 19:45:35.938 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 19:45:36.244 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$413dedb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 19:45:36.313 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 19:45:37.894 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 19:45:38.385 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 19:45:38.973 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 19:45:39.009 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 19:45:39.047 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 19:45:39.603 [ INFO] [                                 com.example.blog.BlogApplicationTests: 61] - Started BlogApplicationTests in 5.408 seconds (JVM running for 7.074)
2020-06-19 19:45:40.473 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
2020-06-19 20:15:03.849 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 8980 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 20:15:03.858 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 20:15:04.713 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 20:15:04.824 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$9de48cad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 20:15:04.859 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 20:15:05.136 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 20:15:05.143 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 20:15:05.143 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 20:15:05.144 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 20:15:05.211 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 20:15:05.212 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1315 ms
2020-06-19 20:15:05.741 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 20:15:05.840 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 20:15:06.016 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 20:15:06.034 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 20:15:06.035 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 20:15:06.047 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 20:15:06.072 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 20:15:06.369 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 3.001 seconds (JVM running for 4.304)
2020-06-19 20:15:09.978 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 20:15:09.978 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 20:15:09.988 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 9 ms
2020-06-19 20:15:10.630 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [558] milliseconds.
2020-06-19 20:15:10.654 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 20:15:10.775 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 20:15:10.851 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:15:13.519 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:15:13.738 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:15:14.070 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 20:15:14.095 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:15:14.472 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 20:15:14.497 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:15:16.510 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:15:17.366 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:15:17.507 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:17:11.711 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 20360 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 20:17:11.724 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 20:17:13.058 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 20:17:13.218 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$6cb5dd8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 20:17:13.285 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 20:17:13.576 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 20:17:13.585 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 20:17:13.587 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 20:17:13.588 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 20:17:13.690 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 20:17:13.691 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1903 ms
2020-06-19 20:17:14.327 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 20:17:14.397 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 20:17:14.566 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 20:17:14.602 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 20:17:14.603 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 20:17:14.615 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 20:17:14.667 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 20:17:15.023 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 3.887 seconds (JVM running for 5.275)
2020-06-19 20:17:15.606 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 20:17:15.607 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 20:17:15.614 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 7 ms
2020-06-19 20:17:20.267 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [549] milliseconds.
2020-06-19 20:17:20.293 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 20:17:20.443 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 20:22:51.262 [ INFO] [                                           com.example.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 8728 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 20:22:51.272 [ INFO] [                                           com.example.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 20:22:52.112 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 20:22:52.240 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$878851b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 20:22:52.278 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 20:22:52.471 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 20:22:52.479 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 20:22:52.480 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 20:22:52.481 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 20:22:52.566 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 20:22:52.566 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1237 ms
2020-06-19 20:22:53.091 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 20:22:53.156 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 20:22:53.289 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 20:22:53.309 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 20:22:53.310 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 20:22:53.323 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 20:22:53.378 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 20:22:53.652 [ INFO] [                                           com.example.BlogApplication: 61] - Started BlogApplication in 2.688 seconds (JVM running for 4.142)
2020-06-19 20:23:09.189 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 20:23:09.190 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 20:23:09.197 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 7 ms
2020-06-19 20:23:09.620 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [363] milliseconds.
2020-06-19 20:23:09.638 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 20:23:09.743 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 20:23:49.511 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 21420 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 20:23:49.522 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 20:23:50.477 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 20:23:50.589 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$ea4b0a64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 20:23:50.629 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 20:23:50.802 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 20:23:50.809 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 20:23:50.811 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 20:23:50.812 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 20:23:50.885 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 20:23:50.885 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1265 ms
2020-06-19 20:23:51.262 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 20:23:51.315 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 20:23:51.463 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 20:23:51.483 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 20:23:51.485 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 20:23:51.497 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 20:23:51.554 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 20:23:51.854 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.835 seconds (JVM running for 4.074)
2020-06-19 20:23:55.329 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 20:23:55.329 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 20:23:55.335 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 5 ms
2020-06-19 20:32:16.011 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [674] milliseconds.
2020-06-19 20:32:16.030 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 20:32:16.148 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 20:38:03.283 [ INFO] [                                      com.example.blog.BlogApplication: 55] - Starting BlogApplication on DESKTOP-PLSELLL with PID 10528 (F:\all\allCode\java-workspace\spring-MVC\blog\target\classes started by ASUS in F:\all\allCode\java-workspace\spring-MVC\blog)
2020-06-19 20:38:03.296 [ INFO] [                                      com.example.blog.BlogApplication:651] - No active profile set, falling back to default profiles: default
2020-06-19 20:38:04.142 [ WARN] [tis.spring.mapper.ClassPathMapperScanner: 44] - No MyBatis mapper was found in '[com.example.api]' package. Please check your configuration.
2020-06-19 20:38:04.251 [ INFO] [trationDelegate$BeanPostProcessorChecker:335] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$b7d62970] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-19 20:38:04.292 [ INFO] [n.server.AnnotationActionEndpointMapping:236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2020-06-19 20:38:04.554 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:108] - Tomcat initialized with port(s): 8088 (http)
2020-06-19 20:38:04.561 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8088"]
2020-06-19 20:38:04.561 [ INFO] [                              org.apache.catalina.core.StandardService:173] - Starting service [Tomcat]
2020-06-19 20:38:04.562 [ INFO] [                               org.apache.catalina.core.StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-19 20:38:04.627 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring embedded WebApplicationContext
2020-06-19 20:38:04.628 [ INFO] [                               org.springfra.web.context.ContextLoader:284] - Root WebApplicationContext: initialization completed in 1280 ms
2020-06-19 20:38:05.091 [ INFO] [pertySourcedRequestMappingHandlerMapping: 69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-06-19 20:38:05.192 [ INFO] [hedulin.concurren.ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
2020-06-19 20:38:05.363 [ INFO] [g.apache.coyote.http11.Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8088"]
2020-06-19 20:38:05.381 [ INFO] [boot.web.embedded.tomcat.TomcatWebServer:220] - Tomcat started on port(s): 8088 (http) with context path ''
2020-06-19 20:38:05.382 [ INFO] [plugins.DocumentationPluginsBootstrapper:160] - Context refreshed
2020-06-19 20:38:05.394 [ INFO] [plugins.DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
2020-06-19 20:38:05.416 [ INFO] [.web.scanners.ApiListingReferenceScanner: 41] - Scanning for api listing references
2020-06-19 20:38:05.689 [ INFO] [                                      com.example.blog.BlogApplication: 61] - Started BlogApplication in 2.834 seconds (JVM running for 4.026)
2020-06-19 20:39:15.660 [ INFO] [na.core.Container.[Tomcat].[localhos.[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-19 20:39:15.661 [ INFO] [.springfra.web.servlet.DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
2020-06-19 20:39:15.670 [ INFO] [.springfra.web.servlet.DispatcherServlet:547] - Completed initialization in 9 ms
2020-06-19 20:39:16.256 [ WARN] [che.catalina.util.SessionIdGeneratorBase:173] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [521] milliseconds.
2020-06-19 20:39:16.287 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:110] - HikariPool-1 - Starting...
2020-06-19 20:39:16.459 [ INFO] [                                    com.zaxxer.hikari.HikariDataSource:123] - HikariPool-1 - Start completed.
2020-06-19 20:39:16.614 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:16.923 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:16.966 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 20:39:17.193 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:17.368 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 20:39:17.393 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:19.838 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:20.684 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:20.892 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:21.821 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:22.208 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:22.473 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:22.499 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:25.728 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:26.451 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 20:39:26.747 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 20:39:27.122 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 20:39:27.147 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:15.926 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:16.869 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:17.033 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:17.974 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:18.426 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:18.755 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:18.781 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:29.734 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:33.634 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:41.558 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:42.364 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:42.671 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 23:41:42.696 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 23:41:51.145 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:51.564 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:41:51.897 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 23:41:51.922 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 23:41:51.922 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:43:19.143 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:43:19.483 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:43:19.825 [ INFO] [                                            com.example.api.CommentApi: 55] - 获取所有评论的数量   调用方法[getAllCommentsPage]
2020-06-19 23:43:19.850 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:43:19.850 [ INFO] [                                            com.example.api.CommentApi: 55] - 分页获取所有评论，需要权限   调用方法[getAllComments]
2020-06-19 23:44:27.939 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:44:28.735 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:44:29.001 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:44:29.418 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:44:29.442 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:44:31.057 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:44:32.115 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:44:32.140 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:45:38.786 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:45:39.571 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:45:39.768 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:45:40.142 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:45:40.167 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:49:14.669 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:49:14.788 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:49:14.862 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:49:15.181 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:49:39.671 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:49:39.857 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:49:39.977 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:49:40.002 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:49:47.754 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:49:48.049 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:49:48.141 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:49:48.421 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:51:07.379 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:51:07.486 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:51:07.582 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:51:07.606 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:51:43.006 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:51:43.203 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:51:43.313 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:51:43.338 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:51:55.777 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:51:55.985 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:51:56.059 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:51:56.083 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:52:34.571 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:52:34.778 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:52:34.852 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:52:34.877 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:53:09.588 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:53:09.705 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:53:09.815 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:53:09.840 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:55:23.752 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:55:23.850 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:55:23.925 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:55:23.949 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:55:39.426 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:55:39.703 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:55:39.776 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:55:39.801 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:55:39.957 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:55:39.980 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:56:48.386 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:56:48.549 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:56:48.659 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:56:48.684 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:58:30.813 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:58:30.887 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:58:30.961 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:58:30.986 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:59:01.524 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
2020-06-19 23:59:01.643 [ INFO] [                                              com.example.api.DraftApi: 55] - 获取草稿的时间线，有权限要求   调用方法[getTimeCount]
2020-06-19 23:59:01.717 [ INFO] [                                            com.example.api.ArticleApi: 55] - 获取文章的发布时间线,有权限验证   调用方法[getArticleTimeCount]
2020-06-19 23:59:01.741 [ INFO] [                                               com.example.api.UserApi: 55] - 使用cookie登录   调用方法[cookieLogin]
